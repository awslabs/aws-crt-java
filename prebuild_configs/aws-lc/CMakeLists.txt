cmake_minimum_required(VERSION 3.9)

project(prebuild-aws-lc C)

option(CRT_FIPS "Whether to build aws-lc with FIPS compliance" OFF)

if (ANDROID)
    set(ANDROID_DEPS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/target/cmake-build/deps/${ANDROID_ABI})
    set(AWS_LIBRARY_OUTPUT_DIR "${CMAKE_BINARY_DIR}/../../../lib")
endif()

if (UNIX AND NOT APPLE)
    set(IN_SOURCE_BUILD ON)
    set(BUILD_TESTING OFF)
    set(BUILD_LIBSSL OFF CACHE BOOL "Don't need libssl, only need libcrypto")
    message("Build with FIPS: " ${CRT_FIPS})
    if (CRT_FIPS)
        set(FIPS ON CACHE BOOL "FIPS compliance")
        set(PERL_EXECUTABLE "perl")
        if (DEFINED ENV{GO_PATH})
            set(GO_EXECUTABLE $ENV{GO_PATH}/go)
            message(STATUS "Overriding GO_EXECUTABLE to ${GO_EXECUTABLE}")
        endif()
    else()
        set(DISABLE_PERL ON CACHE BOOL "Disable codegen")
        set(DISABLE_GO ON CACHE BOOL "Disable codegen")
    endif()

    if(CMAKE_C_COMPILER_ID MATCHES "GNU" AND CMAKE_C_COMPILER_VERSION VERSION_LESS "5.0")
        set(PERL_EXECUTABLE "perl")
        set(MY_ASSEMBLER_IS_TOO_OLD_FOR_512AVX ON CACHE BOOL "Disable AVX512 on old GCC that not supports it")
    endif()

    add_subdirectory(../../crt/aws-lc ${CMAKE_BINARY_DIR}/aws-lc)
else()
    install(CODE "MESSAGE(\"Nothing to install.\")")
endif()
